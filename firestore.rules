rules_version = '2';
service cloud.firestore {

	function isSignedIn(){
		return request.auth != null;
	}

	function isOwner(){
		return request.auth.uid == userId
	}

	function existingData(){
		return request.data
	}

	function incomingData(){
		return request.resource.data
	}

  match /databases/{database}/documents {
    // Allow read-only access to the "products" collection for everyone.
    // Allow read-write access to admin.
    match /products/{document=**} {
      allow read;
      allow read, write: if isSignedIn() && request.auth.token.admin == true;
    }

	match /books/{document=**} {
      allow read;
      allow read, write: if isSignedIn() && request.auth.token.admin == true;
    }

    // Allow read-write access to the "review" collection for logged-in users,
    // read-only access for not logged-in users.
    match /reviews/{document=**} {
      allow read, write: if isSignedIn();
      allow read: if request.auth == null;
    }

    // Allow read-write access to the "users" collection for logged-in users,
    // read-only access for not logged-in users.
    match /users/{userId} {
      allow read;
      allow read, write: if isSignedIn() && isOwner(userId);
    }

	// Allow read-write access to the "orders" collection for logged-in users
	match /orders/{document=**}{
		allow read, write: if isSignedIn();
	}

	match /cartItems/{document=**}{
		allow read, write: if isSignedIn();
	}


    // Restrict access to other documents and collections to admin only.
    match /{document=**} {
      allow read, write: if isSignedIn() && request.auth.token.admin == true;
    }
  }
}
